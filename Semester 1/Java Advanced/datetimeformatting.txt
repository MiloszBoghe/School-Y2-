• Klassen voor Datum/Tijd:
	- Computertijd => Instant
	- Datum (zonder tijdzone) => LocalDate
	- Tijd (zonder tijdzone) => LocalTime
	- Tijdsduur (computertijd) => Duration
	- Tijdsduur (menselijke tijd) => Period
	ChronoUnit

• enumeraties voor Datum/Tijd:
=>Month, DayOfWeek, ChronoUnit

Oefening 3 Hoofdstuk 8 , goede oefening
---------------------------------------------------

Instant.EPOCH			= 1970-01-01T00:00:00Z
Instant.MIN			= -1000000000-01-01T00:00:00Z
Instant.Max			= +1000000000-12-31T23:59:59.999999999Z
Instant.now()			= 2018-01-27T13:30:27.751Z
Instant.getEpochSecond() 	= 1517059827
Instant.now().getNano()	 	= 751000000
Instant.now().minusSeconds(20) 	= 2018-01-27T13:30:07.751Z
Instant.now().plusSeconds(20) 	= 2018-01-27T13:30:47.751Z

Instant.now().isAfter(Instant.now().minusSeconds(20)) 	= true
Instant.now().isBefore(Instant.now().plusSeconds(20)) 	= true
Instant.now().isAfter(Instant.now().plusSeconds(20)) 	= false
Instant.now().isBefore(Instant.now().minusSeconds(20)) 	= false

LocalDate.now()				= 2018-01-27
LocalTime.now()				= 14:30:27.770
LocalDateTime.now()			= 2018-01-27T14:30:27.770

LocalDate.parse("1995-01-01") = 1995-01-01

LocalDateTime.of(2015,6,23)		= 2015-06-23
LocalDateTime.of(10,25,2)		= 10:25:02
LocalDateTime.of(otherDate, otherTime)	= 2015-06-23T10:25:02

LocalDate.of(1958, 4, 29)			= 1958-04-29
LocalDate.of(1958, 4, 29).getDayOfWeek()	= TUESDAY
LocalDate.of(1958, 4, 29).plusDays(6)		= 1958-05-05

ZoneId.of("Europe/Brussels")	= Europe/Brussels
ZoneId.systemDefault()")	= Europe/Paris
ZoneOffset.ofHours(2) 		= +02:00

ZonedDateTime.now() 					= 2018-01-27T14:30:27.775+01:00[Europe/Paris]
ZonedDateTime.now(ZoneId.of("Europe/London")) 		= 2018-01-27T13:30:27.775Z[Europe/London]
ZonedDateTime.now(ZoneId.of("Australia/Sydney")) 	= 2018-01-28T00:30:27.776+11:00[Australia/Sydney]
ZonedDateTime.now(ZoneId.of("UTC-4")) 			= 2018-01-27T09:30:27.776-04:00[UTC-04:00]

	Duration word gebruikt voor verschillen in machinetijden:
Duration.between(Instant.now(), Instant.now().plusSeconds(500).plusMillis(2125698).plusNanos(456398)).getSeconds() 	= 2625

	ChronoUnit is een enumeratie die de verschillende tijdseenheden bevat.
ChronoUnit.MILLIS.between(Instant.now(), Instant.now().plusMillis(55555)) 						= 55555

	Period kan tijdsverschillen weergeven in dagen, maanden en jaren
Period.between(LocalDate.of(1985, 12, 14), LocalDate.now()).getYears() 							= 32
Period.between(LocalDate.of(1985, 12, 14), LocalDate.now()).getMonths() 						= 1
Period.between(LocalDate.of(1985, 12, 14), LocalDate.now()).getDays() 							= 13

	ChronoUnit kan ook tijdsverschillen weergeven
ChronoUnit.YEARS.between(LocalDate.of(1985, 12, 14), LocalDate.now()) 							= 32
ChronoUnit.MONTHS.between(LocalDate.of(1985, 12, 14), LocalDate.now()) 							= 385
ChronoUnit.DAYS.between(LocalDate.of(1985, 12, 14), LocalDate.now()) 							= 11732

LocalDateTime.parse("03/08/1998 13:45:23", DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss")) 				= 1998-08-03T13:45:23
LocalDateTime.parse("03/08/1998 13:45:23", DateTimeFormatter.ofPattern("d/M/y H:m:s")) 					= 1998-08-03T13:45:23

LocalDate.parse(LocalDate.now().format(DateTimeFormatter.ofPattern("yyyy MM dd")), 	DateTimeFormatter.ofPattern("yyyy MM dd")) 	= 2018-01-27
LocalDate.parse(LocalDate.now().toString(), 						DateTimeFormatter.ofPattern("yyyy-MM-dd")) 	= 2018-01-27
LocalDate.parse("1992 12 25", 								DateTimeFormatter.ofPattern("yyyy MM dd")) 	= 1992-12-25

LocalTime.parse("LocalTime.parse(LocalTime.now().format(DateTimeFormatter.ofPattern("H:m")),	DateTimeFormatter.ofPattern("H:m")) = 14:30
LocalTime.parse("6:47", 									DateTimeFormatter.ofPattern("H:m")) = 06:47